import{D as b,E as S,r,o as n,l as s,m as o,G as l,y as W,s as u,H as P,F as p,I as f,p as q,q as N,u as g,J as L}from"./vendor-cfd87129.js";import{_}from"./index-77688a7a.js";import"./fontawesome-3352ad97.js";const h=b("pending",{state:()=>({pending:!1}),actions:{startPending(){this.pending=!0},finishPending(){this.pending=!1}}}),w=S.create({baseURL:"https://api.dictionaryapi.dev/api/v2/entries/en/"}),M=h();w.interceptors.request.use(e=>(M.startPending(),e));w.interceptors.response.use();const F={props:["word","phonetic"],computed:{noSound(){return this.phonetic.audio==!1}},methods:{onPlay(e){e&&new Audio(e).play()}}},I={class:"relative mt-6 md:mt-3"},R={class:"text-4xl font-bold text-slate-800 dark:text-white"},B={class:"mt-2 text-xl text-violet-500 dark:text-violet-400"};function V(e,i,t,m,x,c){const a=r("font-awesome-icon");return n(),s("section",I,[o("h2",R,l(t.word),1),o("h3",B,l(t.phonetic.text),1),c.noSound?P("",!0):(n(),s("button",{key:0,"aria-label":"play audio",onClick:i[0]||(i[0]=W(d=>c.onPlay(t.phonetic.audio),["prevent"])),class:"btn--play absolute right-3 top-1/2 -translate-y-1/2 rounded-full text-6xl text-violet-200 dark:text-violet-600"},[u(a,{icon:"fas fa-play-circle",class:"rounded-full bg-violet-500 dark:bg-violet-100"})]))])}const C=_(F,[["render",V]]);const T={props:["mean"]},k=e=>(q("data-v-6df39211"),e=e(),N(),e),A={class:"py-3"},D={class:"title my-6 text-xl dark:text-white font-bold"},E={class:"bg-white dark:bg-neutral-800 pr-2"},U={class:"ml-4"},G=k(()=>o("h5",{class:"text-xl text-slate-500 dark:text-slate-300"},"Meaning",-1)),H={class:"p-6 pl-10 leading-8 dark:text-white"},J={class:"mb-5 flex items-start gap-3"},O=k(()=>o("h5",{class:"text-xl text-slate-500 dark:text-slate-300"},"synonyms",-1)),j={class:"flex flex-wrap gap-3 font-bold text-violet-600 dark:text-violet-400"},z={class:"mb-5 flex items-start gap-3"},K=k(()=>o("h5",{class:"text-xl text-slate-500 dark:text-slate-300"},"antonyms",-1)),Q={class:"flex flex-wrap gap-3 font-bold text-violet-600 dark:text-violet-400"};function X(e,i,t,m,x,c){return n(),s("section",A,[o("h4",D,[o("span",E,l(t.mean.partOfSpeech),1)]),o("section",U,[o("div",null,[G,o("ul",H,[(n(!0),s(p,null,f(t.mean.definitions,a=>(n(),s("li",{class:"relative before:absolute before:-left-4 before:text-lg before:text-violet-500 before:content-['\\002022']",key:a.definition},l(a.definition),1))),128))])]),o("div",J,[O,o("ul",j,[(n(!0),s(p,null,f(t.mean.synonyms,a=>(n(),s("li",{key:a},l(a),1))),128))])]),o("div",z,[K,o("ul",Q,[(n(!0),s(p,null,f(t.mean.antonyms,a=>(n(),s("li",{key:a},l(a),1))),128))])])])])}const Y=_(T,[["render",X],["__scopeId","data-v-6df39211"]]),Z={props:["sources"]},ee={class:"flex items-start gap-3 border-t border-slate-300 py-4"},te=o("h6",{class:"text-sm text-slate-500 dark:text-slate-300"},"Source",-1),ne={class:"flex flex-wrap gap-3 text-sm text-slate-600 dark:text-slate-50 underline"},oe=["href"];function se(e,i,t,m,x,c){const a=r("font-awesome-icon");return n(),s("section",ee,[te,o("ul",ne,[(n(!0),s(p,null,f(t.sources,d=>(n(),s("li",{key:d},[o("a",{href:d,target:"_blank"},l(d),9,oe),u(a,{icon:"fas fa-external-link-alt",class:"ml-1 text-xs"})]))),128))])])}const ae=_(Z,[["render",se]]),ce={components:{WordTitle:C,WordMeaning:Y,WordSource:ae},props:["word","phonetic","meanings","sources"]};function re(e,i,t,m,x,c){const a=r("WordTitle"),d=r("WordMeaning"),y=r("WordSource");return n(),s("div",null,[u(a,{word:t.word,phonetic:t.phonetic},null,8,["word","phonetic"]),(n(!0),s(p,null,f(t.meanings,(v,$)=>(n(),g(d,{key:t.word+$,mean:v},null,8,["mean"]))),128)),u(y,{sources:t.sources},null,8,["sources"])])}const ie=_(ce,[["render",re]]),de={},le={class:"pt-12 text-center text-3xl text-violet-700 dark:text-violet-400"},_e=o("span",null,"No Result",-1);function ue(e,i){const t=r("font-awesome-icon");return n(),s("section",le,[u(t,{icon:"fas fa-kiwi-bird",class:"mr-4"}),_e])}const he=_(de,[["render",ue]]),pe={},fe={class:"pt-12 text-center text-3xl text-violet-700 dark:text-violet-400"},me=o("span",null,"Loading...",-1);function xe(e,i){const t=r("font-awesome-icon");return n(),s("section",fe,[u(t,{icon:"fas fa-truck-loading",class:"mr-4"}),me])}const ge=_(pe,[["render",xe]]),ye={components:{Word:ie,NoResult:he,Loading:ge},data(){return{keyword:{}}},computed:{query(){return this.$route.query.q},word(){var e;return(e=this.keyword)==null?void 0:e.word},phonetic(){return this.keyword.phonetics?this.keyword.phonetics.find(e=>e.audio!==null)??this.keyword.phonetics[0]:{}},meanings(){var e;return((e=this.keyword)==null?void 0:e.meanings)??[]},sources(){var e;return(e=this.keyword)==null?void 0:e.sourceUrls},pending:()=>h().pending},methods:{async httpFetch(){try{const e=await w.get(`${this.query}`);this.keyword=e.data[0],h().finishPending()}catch{this.keyword={},h().finishPending()}},...L(h,["finishPending"])},created(){this.httpFetch()},watch:{async query(){this.httpFetch()}}},we={class:"container mx-auto px-3 md:px-5"};function ke(e,i,t,m,x,c){const a=r("Loading"),d=r("Word"),y=r("NoResult");return n(),s("div",we,[c.pending?(n(),g(a,{key:0})):c.word?(n(),g(d,{key:1,word:c.word,phonetic:c.phonetic,meanings:c.meanings,sources:c.sources},null,8,["word","phonetic","meanings","sources"])):(n(),g(y,{key:2}))])}const Se=_(ye,[["render",ke]]);export{Se as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoVmlldy1mZmExYzEzMy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0b3Jlcy9wZW5kaW5nLmpzIiwiLi4vLi4vc3JjL3V0aWxzL3JlcXVlc3QuanMiLCIuLi8uLi9zcmMvY29tcG9uZW50cy93b3Jkcy9Xb3JkVGl0bGUudnVlIiwiLi4vLi4vc3JjL2NvbXBvbmVudHMvd29yZHMvV29yZE1lYW5pbmcudnVlIiwiLi4vLi4vc3JjL2NvbXBvbmVudHMvd29yZHMvV29yZFNvdXJjZS52dWUiLCIuLi8uLi9zcmMvY29tcG9uZW50cy93b3Jkcy9Xb3JkLnZ1ZSIsIi4uLy4uL3NyYy9jb21wb25lbnRzL05vUmVzdWx0LnZ1ZSIsIi4uLy4uL3NyYy9jb21wb25lbnRzL0xvYWRpbmcudnVlIiwiLi4vLi4vc3JjL3ZpZXdzL1NlYXJjaFZpZXcudnVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZVN0b3JlIH0gZnJvbSAncGluaWEnXG5cbmV4cG9ydCBjb25zdCB1c2VQZW5kaW5nU3RvcmUgPSBkZWZpbmVTdG9yZSgncGVuZGluZycsIHtcbiAgc3RhdGU6ICgpID0+ICh7IHBlbmRpbmc6IGZhbHNlIH0pLFxuICBhY3Rpb25zOiB7XG4gICAgc3RhcnRQZW5kaW5nKCkge1xuICAgICAgdGhpcy5wZW5kaW5nID0gdHJ1ZVxuICAgIH0sXG4gICAgZmluaXNoUGVuZGluZygpIHtcbiAgICAgIHRoaXMucGVuZGluZyA9IGZhbHNlXG4gICAgfVxuICB9XG59KVxuIiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuaW1wb3J0IHsgdXNlUGVuZGluZ1N0b3JlIH0gZnJvbSAnQC9zdG9yZXMvcGVuZGluZydcblxuY29uc3QgYXBpID0gYXhpb3MuY3JlYXRlKHtcbiAgYmFzZVVSTDogJ2h0dHBzOi8vYXBpLmRpY3Rpb25hcnlhcGkuZGV2L2FwaS92Mi9lbnRyaWVzL2VuLydcbn0pXG5cbmNvbnN0IHBlbmQgPSB1c2VQZW5kaW5nU3RvcmUoKVxuXG4vLyDlnKjoq4vmsYLooqvomZXnkIbliY3mlJTmiKpcbmFwaS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoKGNvbmZpZykgPT4ge1xuICBwZW5kLnN0YXJ0UGVuZGluZygpXG5cbiAgcmV0dXJuIGNvbmZpZ1xufSlcblxuLy8g5Zyo5Zue5oeJ6KKr6JmV55CG5YmN5pSU5oiqXG5hcGkuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgpXG5cbmV4cG9ydCBkZWZhdWx0IGFwaVxuIiwiPHRlbXBsYXRlPlxuICA8c2VjdGlvbiBjbGFzcz1cInJlbGF0aXZlIG10LTYgbWQ6bXQtM1wiPlxuICAgIDxoMiBjbGFzcz1cInRleHQtNHhsIGZvbnQtYm9sZCB0ZXh0LXNsYXRlLTgwMCBkYXJrOnRleHQtd2hpdGVcIj57eyB3b3JkIH19PC9oMj5cbiAgICA8aDMgY2xhc3M9XCJtdC0yIHRleHQteGwgdGV4dC12aW9sZXQtNTAwIGRhcms6dGV4dC12aW9sZXQtNDAwXCI+e3sgcGhvbmV0aWMudGV4dCB9fTwvaDM+XG4gICAgPGJ1dHRvbiBhcmlhLWxhYmVsPVwicGxheSBhdWRpb1wiIEBjbGljay5wcmV2ZW50PVwib25QbGF5KHBob25ldGljLmF1ZGlvKVwiXG4gICAgICBjbGFzcz1cImJ0bi0tcGxheSBhYnNvbHV0ZSByaWdodC0zIHRvcC0xLzIgLXRyYW5zbGF0ZS15LTEvMiByb3VuZGVkLWZ1bGwgdGV4dC02eGwgdGV4dC12aW9sZXQtMjAwIGRhcms6dGV4dC12aW9sZXQtNjAwXCJcbiAgICAgIHYtaWY9XCIhbm9Tb3VuZFwiPlxuICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249XCJmYXMgZmEtcGxheS1jaXJjbGVcIiBjbGFzcz1cInJvdW5kZWQtZnVsbCBiZy12aW9sZXQtNTAwIGRhcms6YmctdmlvbGV0LTEwMFwiIC8+XG4gICAgPC9idXR0b24+XG4gIDwvc2VjdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIHByb3BzOiBbJ3dvcmQnLCAncGhvbmV0aWMnXSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBub1NvdW5kKCkge1xuICAgICAgcmV0dXJuIHRoaXMucGhvbmV0aWMuYXVkaW8gPT0gZmFsc2VcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBvblBsYXkobXAzKSB7XG4gICAgICBpZiAobXAzKSB7XG4gICAgICAgIGxldCBhdWRpbyA9IG5ldyBBdWRpbyhtcDMpXG4gICAgICAgIGF1ZGlvLnBsYXkoKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxzZWN0aW9uIGNsYXNzPVwicHktM1wiPlxuICAgIDxoNCBjbGFzcz1cInRpdGxlIG15LTYgdGV4dC14bCBkYXJrOnRleHQtd2hpdGUgZm9udC1ib2xkXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cImJnLXdoaXRlIGRhcms6YmctbmV1dHJhbC04MDAgcHItMlwiPnt7IG1lYW4ucGFydE9mU3BlZWNoIH19PC9zcGFuPlxuICAgIDwvaDQ+XG5cbiAgICA8c2VjdGlvbiBjbGFzcz1cIm1sLTRcIj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxoNSBjbGFzcz1cInRleHQteGwgdGV4dC1zbGF0ZS01MDAgZGFyazp0ZXh0LXNsYXRlLTMwMFwiPk1lYW5pbmc8L2g1PlxuICAgICAgICA8dWwgY2xhc3M9XCJwLTYgcGwtMTAgbGVhZGluZy04IGRhcms6dGV4dC13aGl0ZVwiPlxuICAgICAgICAgIDxsaVxuICAgICAgICAgICAgY2xhc3M9XCJyZWxhdGl2ZSBiZWZvcmU6YWJzb2x1dGUgYmVmb3JlOi1sZWZ0LTQgYmVmb3JlOnRleHQtbGcgYmVmb3JlOnRleHQtdmlvbGV0LTUwMCBiZWZvcmU6Y29udGVudC1bJ1xcMDAyMDIyJ11cIlxuICAgICAgICAgICAgdi1mb3I9XCJkZWYgb2YgbWVhbi5kZWZpbml0aW9uc1wiXG4gICAgICAgICAgICA6a2V5PVwiZGVmLmRlZmluaXRpb25cIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt7IGRlZi5kZWZpbml0aW9uIH19XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1iLTUgZmxleCBpdGVtcy1zdGFydCBnYXAtM1wiPlxuICAgICAgICA8aDUgY2xhc3M9XCJ0ZXh0LXhsIHRleHQtc2xhdGUtNTAwIGRhcms6dGV4dC1zbGF0ZS0zMDBcIj5zeW5vbnltczwvaDU+XG4gICAgICAgIDx1bCBjbGFzcz1cImZsZXggZmxleC13cmFwIGdhcC0zIGZvbnQtYm9sZCB0ZXh0LXZpb2xldC02MDAgZGFyazp0ZXh0LXZpb2xldC00MDBcIj5cbiAgICAgICAgICA8bGkgdi1mb3I9XCJzeW4gb2YgbWVhbi5zeW5vbnltc1wiIDprZXk9XCJzeW5cIj57eyBzeW4gfX08L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwibWItNSBmbGV4IGl0ZW1zLXN0YXJ0IGdhcC0zXCI+XG4gICAgICAgIDxoNSBjbGFzcz1cInRleHQteGwgdGV4dC1zbGF0ZS01MDAgZGFyazp0ZXh0LXNsYXRlLTMwMFwiPmFudG9ueW1zPC9oNT5cbiAgICAgICAgPHVsIGNsYXNzPVwiZmxleCBmbGV4LXdyYXAgZ2FwLTMgZm9udC1ib2xkIHRleHQtdmlvbGV0LTYwMCBkYXJrOnRleHQtdmlvbGV0LTQwMFwiPlxuICAgICAgICAgIDxsaSB2LWZvcj1cImFudCBvZiBtZWFuLmFudG9ueW1zXCIgOmtleT1cImFudFwiPnt7IGFudCB9fTwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L3NlY3Rpb24+XG4gIDwvc2VjdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIHByb3BzOiBbJ21lYW4nXVxufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBzY29wZWQgbGFuZz1cInNjc3NcIj5cbi50aXRsZSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzVjNWM1O1xuICBsaW5lLWhlaWdodDogMC4xZW07XG59XG48L3N0eWxlPlxuIiwiPHRlbXBsYXRlPlxuICA8c2VjdGlvbiBjbGFzcz1cImZsZXggaXRlbXMtc3RhcnQgZ2FwLTMgYm9yZGVyLXQgYm9yZGVyLXNsYXRlLTMwMCBweS00XCI+XG4gICAgPGg2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LXNsYXRlLTUwMCBkYXJrOnRleHQtc2xhdGUtMzAwXCI+U291cmNlPC9oNj5cbiAgICA8dWwgY2xhc3M9XCJmbGV4IGZsZXgtd3JhcCBnYXAtMyB0ZXh0LXNtIHRleHQtc2xhdGUtNjAwIGRhcms6dGV4dC1zbGF0ZS01MCB1bmRlcmxpbmVcIj5cbiAgICAgIDxsaSB2LWZvcj1cInNvdXJjZSBvZiBzb3VyY2VzXCIgOmtleT1cInNvdXJjZVwiPlxuICAgICAgICA8YSA6aHJlZj1cInNvdXJjZVwiIHRhcmdldD1cIl9ibGFua1wiPnt7IHNvdXJjZSB9fTwvYT5cbiAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249XCJmYXMgZmEtZXh0ZXJuYWwtbGluay1hbHRcIiBjbGFzcz1cIm1sLTEgdGV4dC14c1wiIC8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gIDwvc2VjdGlvbj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIHByb3BzOiBbJ3NvdXJjZXMnXVxufVxuPC9zY3JpcHQ+XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPCEtLSB0aXRsZSAtLT5cbiAgICA8V29yZFRpdGxlIDp3b3JkPVwid29yZFwiIDpwaG9uZXRpYz1cInBob25ldGljXCIgLz5cblxuICAgIDwhLS0gbWVhbmluZ3MgLS0+XG4gICAgPFdvcmRNZWFuaW5nIHYtZm9yPVwiKG1lYW4sIGlkeCkgb2YgbWVhbmluZ3NcIiA6a2V5PVwid29yZCArIGlkeFwiIDptZWFuPVwibWVhblwiIC8+XG5cbiAgICA8IS0tIHNvdXJjZSAtLT5cbiAgICA8V29yZFNvdXJjZSA6c291cmNlcz1cInNvdXJjZXNcIiAvPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgV29yZFRpdGxlIGZyb20gJ0AvY29tcG9uZW50cy93b3Jkcy9Xb3JkVGl0bGUudnVlJ1xuaW1wb3J0IFdvcmRNZWFuaW5nIGZyb20gJ0AvY29tcG9uZW50cy93b3Jkcy9Xb3JkTWVhbmluZy52dWUnXG5pbXBvcnQgV29yZFNvdXJjZSBmcm9tICdAL2NvbXBvbmVudHMvd29yZHMvV29yZFNvdXJjZS52dWUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50czogeyBXb3JkVGl0bGUsIFdvcmRNZWFuaW5nLCBXb3JkU291cmNlIH0sXG4gIHByb3BzOiBbJ3dvcmQnLCAncGhvbmV0aWMnLCAnbWVhbmluZ3MnLCAnc291cmNlcyddXG59XG48L3NjcmlwdD5cbiIsIjx0ZW1wbGF0ZT5cbiAgPHNlY3Rpb24gY2xhc3M9XCJwdC0xMiB0ZXh0LWNlbnRlciB0ZXh0LTN4bCB0ZXh0LXZpb2xldC03MDAgZGFyazp0ZXh0LXZpb2xldC00MDBcIj5cbiAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj1cImZhcyBmYS1raXdpLWJpcmRcIiBjbGFzcz1cIm1yLTRcIiAvPlxuICAgIDxzcGFuPk5vIFJlc3VsdDwvc3Bhbj5cbiAgPC9zZWN0aW9uPlxuPC90ZW1wbGF0ZT5cbiIsIjx0ZW1wbGF0ZT5cbiAgPHNlY3Rpb24gY2xhc3M9XCJwdC0xMiB0ZXh0LWNlbnRlciB0ZXh0LTN4bCB0ZXh0LXZpb2xldC03MDAgZGFyazp0ZXh0LXZpb2xldC00MDBcIj5cbiAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj1cImZhcyBmYS10cnVjay1sb2FkaW5nXCIgY2xhc3M9XCJtci00XCIgLz5cbiAgICA8c3Bhbj5Mb2FkaW5nLi4uPC9zcGFuPlxuICA8L3NlY3Rpb24+XG48L3RlbXBsYXRlPlxuIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyIG14LWF1dG8gcHgtMyBtZDpweC01XCI+XG4gICAgPExvYWRpbmcgdi1pZj1cInBlbmRpbmdcIiAvPlxuICAgIDxXb3JkIHYtZWxzZS1pZj1cIndvcmRcIiA6d29yZD1cIndvcmRcIiA6cGhvbmV0aWM9XCJwaG9uZXRpY1wiIDptZWFuaW5ncz1cIm1lYW5pbmdzXCIgOnNvdXJjZXM9XCJzb3VyY2VzXCIgLz5cbiAgICA8Tm9SZXN1bHQgdi1lbHNlIC8+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBhcGkgZnJvbSAnQC91dGlscy9yZXF1ZXN0LmpzJ1xuaW1wb3J0IHsgdXNlUGVuZGluZ1N0b3JlIH0gZnJvbSAnQC9zdG9yZXMvcGVuZGluZydcbmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICdwaW5pYSdcbmltcG9ydCBXb3JkIGZyb20gJ0AvY29tcG9uZW50cy93b3Jkcy9Xb3JkLnZ1ZSdcbmltcG9ydCBOb1Jlc3VsdCBmcm9tICdAL2NvbXBvbmVudHMvTm9SZXN1bHQudnVlJ1xuaW1wb3J0IExvYWRpbmcgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmcudnVlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHsgV29yZCwgTm9SZXN1bHQsIExvYWRpbmcgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAga2V5d29yZDoge31cbiAgICB9XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgcXVlcnkoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcm91dGUucXVlcnkucVxuICAgIH0sXG4gICAgd29yZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmtleXdvcmQ/LndvcmRcbiAgICB9LFxuICAgIHBob25ldGljKCkge1xuICAgICAgaWYgKCF0aGlzLmtleXdvcmQucGhvbmV0aWNzKSB7XG4gICAgICAgIHJldHVybiB7fVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5rZXl3b3JkLnBob25ldGljcy5maW5kKChwaCkgPT4gcGguYXVkaW8gIT09IG51bGwpID8/IHRoaXMua2V5d29yZC5waG9uZXRpY3NbMF1cbiAgICB9LFxuICAgIG1lYW5pbmdzKCkge1xuICAgICAgcmV0dXJuIHRoaXMua2V5d29yZD8ubWVhbmluZ3MgPz8gW11cbiAgICB9LFxuICAgIHNvdXJjZXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5rZXl3b3JkPy5zb3VyY2VVcmxzXG4gICAgfSxcbiAgICBwZW5kaW5nOiAoKSA9PiB1c2VQZW5kaW5nU3RvcmUoKS5wZW5kaW5nXG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBhc3luYyBodHRwRmV0Y2goKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBhcGkuZ2V0KGAke3RoaXMucXVlcnl9YClcbiAgICAgICAgdGhpcy5rZXl3b3JkID0gcmVzLmRhdGFbMF1cbiAgICAgICAgdXNlUGVuZGluZ1N0b3JlKCkuZmluaXNoUGVuZGluZygpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHRoaXMua2V5d29yZCA9IHt9XG4gICAgICAgIHVzZVBlbmRpbmdTdG9yZSgpLmZpbmlzaFBlbmRpbmcoKVxuICAgICAgfVxuICAgIH0sXG4gICAgLi4ubWFwQWN0aW9ucyh1c2VQZW5kaW5nU3RvcmUsIFsnZmluaXNoUGVuZGluZyddKVxuICB9LFxuICBjcmVhdGVkKCkge1xuICAgIHRoaXMuaHR0cEZldGNoKClcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBhc3luYyBxdWVyeSgpIHtcbiAgICAgIHRoaXMuaHR0cEZldGNoKClcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIl0sIm5hbWVzIjpbInVzZVBlbmRpbmdTdG9yZSIsImRlZmluZVN0b3JlIiwiYXBpIiwiYXhpb3MiLCJwZW5kIiwiY29uZmlnIiwiX3NmY19tYWluIiwibXAzIiwiX2hvaXN0ZWRfMSIsIl9ob2lzdGVkXzIiLCJfaG9pc3RlZF8zIiwiX29wZW5CbG9jayIsIl9jcmVhdGVFbGVtZW50QmxvY2siLCJfY3JlYXRlRWxlbWVudFZOb2RlIiwiX3RvRGlzcGxheVN0cmluZyIsIiRwcm9wcyIsIiRvcHRpb25zIiwiX2NhY2hlIiwiX3dpdGhNb2RpZmllcnMiLCIkZXZlbnQiLCJfY3JlYXRlVk5vZGUiLCJfY29tcG9uZW50X2ZvbnRfYXdlc29tZV9pY29uIiwiX2hvaXN0ZWRfNCIsIl9ob2lzdGVkXzUiLCJfd2l0aFNjb3BlSWQiLCJfaG9pc3RlZF82IiwiX2hvaXN0ZWRfNyIsIl9ob2lzdGVkXzgiLCJfaG9pc3RlZF85IiwiX2hvaXN0ZWRfMTAiLCJfaG9pc3RlZF8xMSIsIl9ob2lzdGVkXzEyIiwiX0ZyYWdtZW50IiwiX3JlbmRlckxpc3QiLCJkZWYiLCJzeW4iLCJhbnQiLCJzb3VyY2UiLCJXb3JkVGl0bGUiLCJXb3JkTWVhbmluZyIsIldvcmRTb3VyY2UiLCJfY29tcG9uZW50X1dvcmRUaXRsZSIsIm1lYW4iLCJpZHgiLCJfY3JlYXRlQmxvY2siLCJfY29tcG9uZW50X1dvcmRNZWFuaW5nIiwiX2NvbXBvbmVudF9Xb3JkU291cmNlIiwiV29yZCIsIk5vUmVzdWx0IiwiTG9hZGluZyIsIl9hIiwicGgiLCJyZXMiLCJtYXBBY3Rpb25zIiwiX2NvbXBvbmVudF9Mb2FkaW5nIiwiX2NvbXBvbmVudF9Xb3JkIiwiX2NvbXBvbmVudF9Ob1Jlc3VsdCJdLCJtYXBwaW5ncyI6ImtOQUVPLE1BQU1BLEVBQWtCQyxFQUFZLFVBQVcsQ0FDcEQsTUFBTyxLQUFPLENBQUUsUUFBUyxLQUN6QixRQUFTLENBQ1AsY0FBZSxDQUNiLEtBQUssUUFBVSxFQUNoQixFQUNELGVBQWdCLENBQ2QsS0FBSyxRQUFVLEVBQ2hCLENBQ0YsQ0FDSCxDQUFDLEVDVEtDLEVBQU1DLEVBQU0sT0FBTyxDQUN2QixRQUFTLGtEQUNYLENBQUMsRUFFS0MsRUFBT0osRUFBaUIsRUFHOUJFLEVBQUksYUFBYSxRQUFRLElBQUtHLElBQzVCRCxFQUFLLGFBQWMsRUFFWkMsRUFDUixFQUdESCxFQUFJLGFBQWEsU0FBUyxJQUFHLEVDSjdCLE1BQUtJLEVBQVUsQ0FDYixNQUFPLENBQUMsT0FBUSxVQUFVLEVBQzFCLFNBQVUsQ0FDUixTQUFVLENBQ1IsT0FBTyxLQUFLLFNBQVMsT0FBUyxFQUNoQyxDQUNELEVBQ0Qs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
