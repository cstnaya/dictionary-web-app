import{_ as u,a as r}from"./index-65b81576.js";import{z as _,A as m,i as o,B as g,r as i,o as s,j as y,n as a}from"./vendor-f8187400.js";const n=_("pending",{state:()=>({pending:!1}),actions:{startPending(){this.pending=!0},finishPending(){this.pending=!1}}}),c=m.create({baseURL:"https://api.dictionaryapi.dev/api/v2/entries/en/"}),l=n();c.interceptors.request.use(e=>(l.startPending(),e));c.interceptors.response.use();const w={components:{Word:o(()=>r(()=>import("./Word-2e7600c6.js"),["assets/Word-2e7600c6.js","assets/index-65b81576.js","assets/vendor-f8187400.js","assets/index-870e7093.css"])),NoResult:o(()=>r(()=>import("./NoResult-896dc37a.js"),["assets/NoResult-896dc37a.js","assets/index-65b81576.js","assets/vendor-f8187400.js","assets/index-870e7093.css"])),Loading:o(()=>r(()=>import("./Loading-81eec545.js"),["assets/Loading-81eec545.js","assets/index-65b81576.js","assets/vendor-f8187400.js","assets/index-870e7093.css"]))},data(){return{keyword:{}}},computed:{query(){return this.$route.query.q},word(){var e;return(e=this.keyword)==null?void 0:e.word},phonetic(){return this.keyword.phonetics?this.keyword.phonetics.find(e=>e.audio!==null)??this.keyword.phonetics[0]:{}},meanings(){var e;return((e=this.keyword)==null?void 0:e.meanings)??[]},sources(){var e;return(e=this.keyword)==null?void 0:e.sourceUrls},pending:()=>n().pending},methods:{async httpFetch(){try{const e=await c.get(`${this.query}`);this.keyword=e.data[0],n().finishPending()}catch{this.keyword={},n().finishPending()}},...g(n,["finishPending"])},created(){this.httpFetch()},watch:{async query(){this.httpFetch()}}},f={class:"container mx-auto px-3 md:px-5"};function k(e,P,v,x,E,t){const d=i("Loading"),p=i("Word"),h=i("NoResult");return s(),y("div",f,[t.pending?(s(),a(d,{key:0})):t.word?(s(),a(p,{key:1,word:t.word,phonetic:t.phonetic,meanings:t.meanings,sources:t.sources},null,8,["word","phonetic","meanings","sources"])):(s(),a(h,{key:2}))])}const q=u(w,[["render",k]]);export{q as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoVmlldy1mMDQ4YjgwZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N0b3Jlcy9wZW5kaW5nLmpzIiwiLi4vLi4vc3JjL3V0aWxzL3JlcXVlc3QuanMiLCIuLi8uLi9zcmMvdmlld3MvU2VhcmNoVmlldy52dWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lU3RvcmUgfSBmcm9tICdwaW5pYSdcblxuZXhwb3J0IGNvbnN0IHVzZVBlbmRpbmdTdG9yZSA9IGRlZmluZVN0b3JlKCdwZW5kaW5nJywge1xuICBzdGF0ZTogKCkgPT4gKHsgcGVuZGluZzogZmFsc2UgfSksXG4gIGFjdGlvbnM6IHtcbiAgICBzdGFydFBlbmRpbmcoKSB7XG4gICAgICB0aGlzLnBlbmRpbmcgPSB0cnVlXG4gICAgfSxcbiAgICBmaW5pc2hQZW5kaW5nKCkge1xuICAgICAgdGhpcy5wZW5kaW5nID0gZmFsc2VcbiAgICB9XG4gIH1cbn0pXG4iLCJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5pbXBvcnQgeyB1c2VQZW5kaW5nU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy9wZW5kaW5nJ1xuXG5jb25zdCBhcGkgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOiAnaHR0cHM6Ly9hcGkuZGljdGlvbmFyeWFwaS5kZXYvYXBpL3YyL2VudHJpZXMvZW4vJ1xufSlcblxuY29uc3QgcGVuZCA9IHVzZVBlbmRpbmdTdG9yZSgpXG5cbi8vIOWcqOiri+axguiiq+iZleeQhuWJjeaUlOaIqlxuYXBpLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgoY29uZmlnKSA9PiB7XG4gIHBlbmQuc3RhcnRQZW5kaW5nKClcblxuICByZXR1cm4gY29uZmlnXG59KVxuXG4vLyDlnKjlm57mh4nooqvomZXnkIbliY3mlJTmiKpcbmFwaS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKClcblxuZXhwb3J0IGRlZmF1bHQgYXBpXG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjb250YWluZXIgbXgtYXV0byBweC0zIG1kOnB4LTVcIj5cbiAgICA8TG9hZGluZyB2LWlmPVwicGVuZGluZ1wiIC8+XG4gICAgPFdvcmQgdi1lbHNlLWlmPVwid29yZFwiIDp3b3JkPVwid29yZFwiIDpwaG9uZXRpYz1cInBob25ldGljXCIgOm1lYW5pbmdzPVwibWVhbmluZ3NcIiA6c291cmNlcz1cInNvdXJjZXNcIiAvPlxuICAgIDxOb1Jlc3VsdCB2LWVsc2UgLz5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IGFwaSBmcm9tICdAL3V0aWxzL3JlcXVlc3QuanMnXG5pbXBvcnQgeyB1c2VQZW5kaW5nU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy9wZW5kaW5nJ1xuaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gJ3BpbmlhJ1xuaW1wb3J0IHsgZGVmaW5lQXN5bmNDb21wb25lbnQgfSBmcm9tICd2dWUnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29tcG9uZW50czoge1xuICAgIFdvcmQ6IGRlZmluZUFzeW5jQ29tcG9uZW50KCgpID0+IGltcG9ydCgnQC9jb21wb25lbnRzL3dvcmRzL1dvcmQudnVlJykpLFxuICAgIE5vUmVzdWx0OiBkZWZpbmVBc3luY0NvbXBvbmVudCgoKSA9PiBpbXBvcnQoJ0AvY29tcG9uZW50cy9Ob1Jlc3VsdC52dWUnKSksXG4gICAgTG9hZGluZzogZGVmaW5lQXN5bmNDb21wb25lbnQoKCkgPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvTG9hZGluZy52dWUnKSlcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAga2V5d29yZDoge31cbiAgICB9XG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgcXVlcnkoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcm91dGUucXVlcnkucVxuICAgIH0sXG4gICAgd29yZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmtleXdvcmQ/LndvcmRcbiAgICB9LFxuICAgIHBob25ldGljKCkge1xuICAgICAgaWYgKCF0aGlzLmtleXdvcmQucGhvbmV0aWNzKSB7XG4gICAgICAgIHJldHVybiB7fVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5rZXl3b3JkLnBob25ldGljcy5maW5kKChwaCkgPT4gcGguYXVkaW8gIT09IG51bGwpID8/IHRoaXMua2V5d29yZC5waG9uZXRpY3NbMF1cbiAgICB9LFxuICAgIG1lYW5pbmdzKCkge1xuICAgICAgcmV0dXJuIHRoaXMua2V5d29yZD8ubWVhbmluZ3MgPz8gW11cbiAgICB9LFxuICAgIHNvdXJjZXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5rZXl3b3JkPy5zb3VyY2VVcmxzXG4gICAgfSxcbiAgICBwZW5kaW5nOiAoKSA9PiB1c2VQZW5kaW5nU3RvcmUoKS5wZW5kaW5nXG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBhc3luYyBodHRwRmV0Y2goKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBhcGkuZ2V0KGAke3RoaXMucXVlcnl9YClcbiAgICAgICAgdGhpcy5rZXl3b3JkID0gcmVzLmRhdGFbMF1cbiAgICAgICAgdXNlUGVuZGluZ1N0b3JlKCkuZmluaXNoUGVuZGluZygpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHRoaXMua2V5d29yZCA9IHt9XG4gICAgICAgIHVzZVBlbmRpbmdTdG9yZSgpLmZpbmlzaFBlbmRpbmcoKVxuICAgICAgfVxuICAgIH0sXG4gICAgLi4ubWFwQWN0aW9ucyh1c2VQZW5kaW5nU3RvcmUsIFsnZmluaXNoUGVuZGluZyddKVxuICB9LFxuICBjcmVhdGVkKCkge1xuICAgIHRoaXMuaHR0cEZldGNoKClcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBhc3luYyBxdWVyeSgpIHtcbiAgICAgIHRoaXMuaHR0cEZldGNoKClcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuIl0sIm5hbWVzIjpbInVzZVBlbmRpbmdTdG9yZSIsImRlZmluZVN0b3JlIiwiYXBpIiwiYXhpb3MiLCJwZW5kIiwiY29uZmlnIiwiX3NmY19tYWluIiwiZGVmaW5lQXN5bmNDb21wb25lbnQiLCJfX3ZpdGVQcmVsb2FkIiwiX2EiLCJwaCIsInJlcyIsIm1hcEFjdGlvbnMiLCJfaG9pc3RlZF8xIiwiX29wZW5CbG9jayIsIl9jcmVhdGVFbGVtZW50QmxvY2siLCIkb3B0aW9ucyIsIl9jcmVhdGVCbG9jayIsIl9jb21wb25lbnRfTG9hZGluZyIsIl9jb21wb25lbnRfV29yZCIsIl9jb21wb25lbnRfTm9SZXN1bHQiXSwibWFwcGluZ3MiOiJ5SUFFTyxNQUFNQSxFQUFrQkMsRUFBWSxVQUFXLENBQ3BELE1BQU8sS0FBTyxDQUFFLFFBQVMsS0FDekIsUUFBUyxDQUNQLGNBQWUsQ0FDYixLQUFLLFFBQVUsRUFDaEIsRUFDRCxlQUFnQixDQUNkLEtBQUssUUFBVSxFQUNoQixDQUNGLENBQ0gsQ0FBQyxFQ1RLQyxFQUFNQyxFQUFNLE9BQU8sQ0FDdkIsUUFBUyxrREFDWCxDQUFDLEVBRUtDLEVBQU9KLEVBQWlCLEVBRzlCRSxFQUFJLGFBQWEsUUFBUSxJQUFLRyxJQUM1QkQsRUFBSyxhQUFjLEVBRVpDLEVBQ1IsRUFHREgsRUFBSSxhQUFhLFNBQVMsSUFBRyxFQ0g3QixNQUFLSSxFQUFVLENBQ2IsV0FBWSxDQUNWLEtBQU1DLEVBQXFCLElBQU1DLEVBQUEsSUFBQSxPQUFPLG9CQUE2QixFQUFBLGtCQUFBLENBQUMsRUFDdEUsU0FBVUQsRUFBcUIsSUFBTUMsRUFBQSxJQUFBLE9BQU8sd0JBQTJCLEVBQUEsa0JBQUEsQ0FBQyxFQUN4RSxRQUFTRCxFQUFxQixJQUFNQyxFQUFBLElBQUEsT0FBTyx1QkFBMEIscUJBQUMsQ0FDdkUsRUFDRCxNQUFPLENBQ0wsTUFBTyxDQUNMLFFBQVMsQ0FBQyxDQUNaLENBQ0QsRUFDRCxTQUFVLENBQ1IsT0FBUSxDQUNOLE9BQU8sS0FBSyxPQUFPLE1BQU0sQ0FDMUIsRUFDRCxNQUFPLE9BQ0wsT0FBT0MsRUFBQSxLQUFLLFVBQUwsWUFBQUEsRUFBYyxJQUN0QixFQUNELFVBQVcsQ0FDVCxPQUFLLEtBQUssUUFBUSxVQUlYLEtBQUssUUFBUSxVQUFVLEtBQU1DLEdBQU9BLEVBQUcsUUFBVSxJQUFJLEdBQUssS0FBSyxRQUFRLFVBQVUsQ0FBQyxFQUhoRixDQUFDLENBSVgsRUFDRCxVQUFXLE9BQ1QsUUFBT0QsRUFBQSxLQUFLLFVBQUwsWUFBQUEsRUFBYyxXQUFZLENBQUMsQ0FDbkMsRUFDRCxTQUFVLE9BQ1IsT0FBT0EsRUFBQSxLQUFLLFVBQUwsWUFBQUEsRUFBYyxVQUN0QixFQUNELFFBQVMsSUFBTVQsRUFBZSxFQUFHLE9BQ2xDLEVBQ0QsUUFBUyxDQUNQLE1BQU0sV0FBWSxDQUNoQixHQUFJLENBQ0YsTUFBTVcsRUFBTSxNQUFNVCxFQUFJLElBQUksR0FBRyxLQUFLLE9BQU8sRUFDekMsS0FBSyxRQUFVUyxFQUFJLEtBQUssQ0FBQyxFQUN6QlgsRUFBZSxFQUFHLGNBQWMsQ0FDbEMsTUFBRSxDQUNBLEtBQUssUUFBVSxDQUFDLEVBQ2hCQSxFQUFlLEVBQUcsY0FBYyxDQUNsQyxDQUNELEVBQ0QsR0FBR1ksRUFBV1osRUFBaUIsQ0FBQyxlQUFlLENBQUMsQ0FDakQsRUFDRCxTQUFVLENBQ1IsS0FBSyxVQUFVLENBQ2hCLEVBQ0QsTUFBTyxDQUNMLE1BQU0sT0FBUSxDQUNaLEtBQUssVUFBVSxDQUNqQixDQUNGLENBQ0YsRUFuRU9hLEVBQUEsQ0FBQSxNQUFNLGdDQUFnQywyRUFBM0MsT0FBQUMsRUFBQSxFQUFBQyxFQUlNLE1BSk5GLEVBSU0sQ0FIV0csRUFBTyxhQUF0QkMsRUFBMEJDLEVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUNURixFQUFJLFVBQXJCQyxFQUFtR0UsRUFBQSxPQUEzRSxLQUFNSCxFQUFJLEtBQUcsU0FBVUEsRUFBUSxTQUFHLFNBQVVBLEVBQVEsU0FBRyxRQUFTQSxFQUFPLGdFQUMvRkMsRUFBbUJHLEVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSJ9
